
#include <stdio.h>
#include <math.h>
#include<stdlib.h>
#include <GL/glut.h>
#include<iostream>
using namespace std;

double X1, Y1, X2, Y2;
int i;

void ddaLine(void)
{
	double dx = (X2 - X1); //difference between two end points.
	double dy = (Y2 - Y1);//difference between two end points.
	double d; //how many steps to take.
	float xInc, yInc, x = X1, y = Y1; // initial value of x and y will be 
	d = (abs(dx)>abs(dy)) ? (abs(dx)) : (abs(dy));  //if dx>dy then more steps need in x coordinate then y .and vice versa.
	xInc = dx / (float)d;
	yInc = dy / (float)d;
	glClear(GL_COLOR_BUFFER_BIT);
	glBegin(GL_POINTS); //start of point
	glVertex2i(x, y);

	for (i = 0; i<d; i++)
	{
		x += xInc;
		y += yInc;
		glVertex2i(x, y); //drawing lines incrementing x and y coordinate accordingly.
	}
	glEnd();

	glFlush();
}
void Init()
{
	glClearColor(1.0, 1.0, 1.0, 0);
	glColor3f(0.0, 0.0, 0.0);
	gluOrtho2D(0, 640, 0, 480);
}
void main(int argc, char **argv)
{
	cout << "x1,y1";
	cin >> X1 >> Y1;

	cout << "Enter x2,y2";
	cin >> X2 >> Y2;

	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowPosition(0, 0);
	glutInitWindowSize(640, 480);
	glutCreateWindow("DDA_Line");
	Init();
	glutDisplayFunc(ddaLine);
	glutMainLoop();
}